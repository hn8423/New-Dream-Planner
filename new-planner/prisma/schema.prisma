// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id     String @id @default(cuid())
  userId String @unique
  type   String

  provider                 String?
  providerAccountId        String?
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  oauth_token_secret       String?
  oauth_token              String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId], name: "provider_providerAccountId")
}

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

model User {
  id              String            @id @default(cuid())
  name            String?
  email           String?           @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account?
  // sessions        Session[]
  mission         Mission?
  schedule        Schedule[]
  weekanalysis    WeeklyAnalysis[]
  dailylookinside DailyLookInside[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Mission {
  id String @id @default(cuid())

  userId     String  @unique
  identity   String? @db.Text
  hurt       String? @db.Text
  experience String? @db.Text
  myMission  String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WeeklyAnalysis {
  id String @id @default(cuid())

  userId          String
  year            String
  month           String
  week            String
  coreMission     String? @db.Text
  lookInside      String? @db.Text
  mainFocus       String? @db.Text
  lifeCoreMission String? @db.Text
  lifeLookInside  String? @db.Text
  lifeMainFocus   String? @db.Text

  user User @relation(fields: [userId], references: [id])

  @@unique([year, month, week, userId])
}

model DailyLookInside {
  id String @id @default(cuid())

  userId String
  year   String?
  month  String?
  week   String?

  lookInsideSun String? @db.Text
  lookInsideMon String? @db.Text
  lookInsideTue String? @db.Text
  lookInsideWed String? @db.Text
  lookInsideThu String? @db.Text
  lookInsideFri String? @db.Text
  lookInsideSat String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([year, month, week, userId])
}

model Schedule {
  id               String    @id @default(cuid())
  userId           String
  startDate        DateTime
  endDate          DateTime
  title            String
  color            String
  repeatDay        String?
  repeatLastDay    DateTime?
  isrepeat         Boolean
  type             String
  isComplete       Boolean?
  isRepeatComplete String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
