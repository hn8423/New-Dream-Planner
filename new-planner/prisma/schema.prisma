// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  mission       Mission?
  schedule      Schedule[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Mission {
  id String @id @default(cuid())

  userId     String  @unique
  identity   String? @db.Text
  hurt       String? @db.Text
  experience String? @db.Text
  myMission  String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Schedule {
  id            String    @id @default(cuid())
  userId        String
  startDate     DateTime
  endDate       DateTime
  title         String
  color         String
  repeatDay     String?
  repeatLastDay DateTime?
  isrepeat      Boolean
  type          String
  isComplete    Boolean?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
